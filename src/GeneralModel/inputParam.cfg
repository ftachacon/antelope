# This file is for setting paramters
# The file is loaded by libconfig

target = "Haldane2L";
#gauge = "Velocity";

# store all laser paramters here
laser = 
{
    offset = [100.0, 100.0];    // time offset before and after laser pulse trains (a.u.)
    pulses = 
    (
        {
            E0 = 0.00588;                 // electric field strength in a.u.
            w0 = 0.02398077;                 // frequency in a.u.
            ncycles = 10.;              // time duration for pulses in (FWHM for gaussian envelope)
            ellip = 1.0;                // ellipticity of pulse
            cep = 0.0;                  // carrier-envelope phase (rad)
            t0 = 0.0;                   // middle point of the pulse
            phix = 0.;                  // angle between x-axis and semi-major axis in laser ellipse (degree)
            env_name = "gauss";          // name of envelope - "cos4", "gauss"  ("cos2" is eliminated due to numerical problem)

            thetaz = 0.;                // polar angle of propagation direction (degree)
            phiz = 0.;                  // azimuthal angle of propagation direction (degree)
        }
    );
};
# store all calculation options here 
calc = 
{
    Npoints = [201, 201];           // Number of points, 1d ~ 3d
    dt = 0.1;                       // timestep (a.u.)

    # do not use dephasing time of occuptation - some discusstion needed
    T1 = -1.;                       // dephasing time of occupation (a.u.) set -1(=default value) to disable this. (infinite dephasing time)
    T2 = 220.;                       // dephasing time of coherence (a.u.) set -1(=default value) to disable this. (infinite dephasing time)
    # below parameters can be omitted
    ksfactor = [1.0, 1.0, 1.0];     // ksfactor = [xfac, yfac, zfac] --> xfac*axis_x, yfac*axis_y, zfac*axis_z
    shotNumber = 0;                 // Number of shots of density for a cycle of the first pulse (for analyze).    (default = 0)
    diagnostic = 0;                 // level of diagnostic.        (default = 0)

    InterIntra = true;              // True for enable inter/intra current separation. (this might affects speed of calculation)

    # overwrite BZ information. 
    # Using those when you need custom BZ shape or speicific point calculation
    # BZaxes = [1., 0., 0.,
    #           0., 1., 0.,
    #           0., 0., 1.];
	#BZorigin = [0., 0.]; #[-1.2797591, 0.];

};

# Standard Haldane parameters 
Haldane = 
{
    # below two paramter must be included in every different material group
    #Nband = 2;          // Number of total bands
    # a0 = 1.0;           // lattice constant in "Angstroms"

	# t1 = 0.075;         // NN hopping parameters in a.u.
	# t2 = 0.025;         // NNN hopping paramters in a.u.
	# Mt2 = 2.54;         // On site potential ratio to t2, i.e. M/t2
	# phi0 = 1.16;        // Magnetic flux in rad

	# a0 = 1.445;           // lattice constant in "Angstroms"

	# t1 = 0.028728267;         // NN hopping parameters in a.u.
	# t2 = 0.002;         // NNN hopping paramters in a.u.
	# Mt2 = 0.; //41.34298745;         // On site potential ratio to t2, i.e. M/t2
	# phi0 = 0.0;

    # Same as Haldane
    # a0 = 1.445;           // lattice constant in "Angstroms"

    # t1 = 0.028728267;         // NN hopping parameters in a.u.
    # t2 = 0.002;         // NNN hopping paramters in a.u.
    # Mt2 = 41.34298745;         // On site potential ratio to t2, i.e. M/t2
    # phi0 = 0.0;

    # t11 =  0.01176;         // interlayer NN hopping paramters in a.u.

    # Same as Haldane
    # a0 = 1.445;           // lattice constant in "Angstroms"

	# t1 = 0.07937853589941479;         // NN hopping parameters in a.u.
	# t2 = 0.0014699728870261996;         // NNN hopping paramters in a.u.
	# Mt2 = 62.625;         // On site potential ratio to t2, i.e. M/t2
	# phi0 = 0.0;

    # Same as Haldane
    a0 = 1.449;           // lattice constant in "Angstroms"

	t1 = 0.08562592066927613;         // NN hopping parameters in a.u.
	t2 = 0.0;         // NNN hopping paramters in a.u.
	M0 = 0.07202867146428378;         // On site potential ratio to t2, i.e. M/t2
	phi0 = 0.0;

    
    #Nvalence = 1;       // Number of valence bands
    # I disable below configuration paramter and make BZ hard coded in Haldane.h 
    # Remember that BZ region is calculated in material generator, not general solver or main file
    # [1./2./sqrt(3.), 1./3.]
    #BZboundary = [0.28867513459, 0.3333333333333];  // Brillouin zone 
};

Haldane2L = 
{
    # Same as Haldane
    # a0 = 1.445;           // lattice constant in "Angstroms"

	# t1 = 0.07937853589941479;         // NN hopping parameters in a.u.
	# t2 = 0.0014699728870261996;         // NNN hopping paramters in a.u.
	# Mt2 = 62.625;         // On site potential ratio to t2, i.e. M/t2
	# phi0 = 0.0;

    #t11 =  0.0; //0.012480012398729722;         // interlayer NN hopping paramters in a.u.

    # Same as Haldane
    a0 = 1.449;           // lattice constant in "Angstroms"

	t1 = 0.08672840033454578;         // NN hopping parameters in a.u.
	t2 = 0.0;         // NNN hopping paramters in a.u.
	M0 = 0.07496861723833619;         // On site potential ratio to t2, i.e. M/t2
	phi0 = 0.0;

    t11 =  0.011759783096209597;         // interlayer NN hopping paramters in a.u.
    # five polytype is implemented: "AA", "AA'", "AB", "A'B", "AB'".   
    # follow notation from 10.1103/PhysRevB.83.235312 (ribeiro2011) 
    # "AB" = "AB1", for flipped one using "AB2"
    # old "2H" = "AA'" and "3R" = "AB2"
    polytype = "AA'";    
}

KaneMele = 
{
    # Same as Haldane
    a0 = 1.0;           // lattice constant in "Angstroms"

	t1 = 0.075;         // NN hopping parameters in a.u.
	t2 = 0.025;         // NNN hopping paramters in a.u.
	Mt2 = 2.54;         // On site potential ratio to t2, i.e. M/t2
	phi0 = 1.16;
}

# Wilson mass term in square lattice
WilsonMass=
{
    # topologcial case
	t = 0.034452489539676556;
	mu = 0.08268597489522374;
	delta = 0.07235022803332077;

    # trivial case
    #t= 0.02067149372380593; 
    #mu=  0.1378099581587062;
    #delta=  0.04341013681999246;

    a0= 3.27310166024207;
};

HaldaneW90 = 
{
    Nval = 1;
    dataName = "Haldane_tb.dat";
};

TMDCs = 
{
    Material = "MoS2";
    isSOCEnabled = "False";
};
